App\Entity\Session:
    collectionOperations:
        get:
            access_control: "has_role('ROLE_ADMIN')"
            normalization_context:
                enable_max_depth: true
                groups: ["quiz.sessions.get"]
        post:
            access_control: "user.hasAccessToQuiz(object.getQuiz()) and has_role('ROLE_TEACHER')"
            denormalization_context:
                groups: ["session.post"]
        api_quizzes_sessions_get_subresource:
            access_control: "user.hasAccessToQuiz(object.getQuiz()) or has_role('ROLE_ADMIN')"
            method: 'GET'
            normalization_context:
                enable_max_depth: true
                groups: ["quiz.sessions.get"]

    itemOperations:
        get:
            normalization_context:
                enable_max_depth: true
                groups: ["session.get"]
        put:
            access_control: "user.hasAccessToQuiz(object.getQuiz())"
            normalization_context:
                groups: ["session.put"]
            denormalization_context:
                groups: ["session.put"] # Only happens whenever the Hosting party modifies the Quiz's session

