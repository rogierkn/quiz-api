App\Entity\Quiz:
    attributes:
        normalization_context:
            enable_max_depth: true
        denormalization_context:
            enable_max_depth: true

    collectionOperations:
        get:
            access_control: "has_role('ROLE_ADMIN')"
            normalization_context:
                enable_max_depth: true
                groups: ["quizzes.get"]
        post: ~
        api_users_quizzes_get_subresource: # Get the quizzes of a user
            method: 'GET'
            access_control: "user == object"
            normalization_context:
                enable_max_depth: true
                groups: ["quizzes.get"]
    itemOperations:
        get:
            access_control: "user.hasAccessToQuiz(object) or has_role('ROLE_ADMIN')"
            normalization_context:
                enable_max_depth: true
                groups: ["quiz.get"]
        put:
            access_control: "user.hasAccessToQuiz(object) or has_role('ROLE_ADMIN')"
            normalization_context:
                enable_max_depth: true
                groups: ["quiz.put"]
            denormalization_context:
                enable_max_depth: true
                groups: ["quiz.put"]
        delete:
            access_control: "user.hasAccessToQuiz(object) or has_role('ROLE_ADMIN')"

    properties:
        sessions:
            subresource:
                resourceClass: 'App\Entity\Session'
                collection: true